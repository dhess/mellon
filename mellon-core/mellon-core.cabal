Name:                   mellon-core
Version:                0.6.0.1
Cabal-Version:          >= 1.10
Build-Type:             Simple
Author:                 Drew Hess <src@drewhess.com>
Maintainer:             Drew Hess <src@drewhess.com>
Homepage:               https://github.com/dhess/mellon/
Bug-Reports:            https://github.com/dhess/mellon/issues/
Stability:              experimental
License:                BSD3
License-File:           LICENSE
Copyright:              Copyright (c) 2016, Drew Hess
Tested-With:            GHC == 7.10.3, GHC == 8.0.1
Category:               System
Synopsis:               Control physical access devices
Description:
  "Speak, friend, and enter."
  .
  @mellon-core@ is a Haskell package for controlling physical access
  devices, e.g., electric strikes. The access control protocol is
  quite simple: a device is either locked, or it is unlocked until a
  particular date and time (an /expiration date/). Once the expiration
  date passes, the device is automatically locked again. In the
  meantime, the device can be locked immediately, overriding the
  unlocked state; or the unlock period can be extended.
  .
  User programs incorporate @mellon-core@ functionality via a
  'Mellon.Controller.Controller', which is responsible for handling
  user lock and unlock commands, and for scheduling and canceling
  unlock expirations.
  .
  User programs must also adapt their physical access devices to the
  interface expected by the controller. For this purpose,
  @mellon-core@ defines a generic 'Mellon.Device.Device' parametric
  data type with 2 simple 'IO' actions for locking and unlocking the
  device. (@mellon-core@ does not provide any useful device
  implementations; see the companion @mellon-gpio@ package for a
  GPIO-driven implementation.)
  .
  Note that @mellon-core@ does not provide authentication mechanisms
  or network services for interacting with controllers; that is the
  domain of higher-level packages which use the base @mellon-core@
  package (e.g., @mellon-web@).
Extra-Doc-Files:        README.md
                      , images/*.svg
Extra-Source-Files:     changelog.md

-- Build doctests
Flag test-doctests
  Default: True
  Manual: True

-- Build hlint test
Flag test-hlint
  Default: True
  Manual: True

Library
  Default-Language:     Haskell2010
  HS-Source-Dirs:       src
  GHC-Options:          -Wall -fwarn-incomplete-uni-patterns -fwarn-incomplete-record-updates
  If impl(ghc > 8)
    GHC-Options:        -Wcompat -Wnoncanonical-monad-instances -Wnoncanonical-monadfail-instances -fno-warn-redundant-constraints
  Exposed-Modules:      Mellon.Controller
                      , Mellon.Controller.Async
                      , Mellon.Device
                      , Mellon.StateMachine
  Other-Extensions:     DeriveDataTypeable
                      , DeriveGeneric
                      , Safe
  Build-Depends:        base         >= 4.8 && < 5
                      , async        > 2 && < 3
                      , mtl
                      , time
                      , transformers

Test-Suite hlint
  Type:                 exitcode-stdio-1.0
  Default-Language:     Haskell2010
  Hs-Source-Dirs:       test
  Ghc-Options:          -w -threaded -rtsopts -with-rtsopts=-N
  Main-Is:              hlint.hs
  If !flag(test-hlint)
    Buildable:          False
  Else
    Build-Depends:      base
                      , hlint

Test-Suite doctest
  Type:                 exitcode-stdio-1.0
  Default-Language:     Haskell2010
  Hs-Source-Dirs:       test
  Ghc-Options:          -Wall -threaded
  Main-Is:              doctest.hs
  If !flag(test-doctests)
    Buildable:          False
  Else
    Build-Depends:      base
                      , QuickCheck
                      , quickcheck-instances
                      , doctest

Test-Suite spec
  Type:                 exitcode-stdio-1.0
  Default-Language:     Haskell2010
  Hs-Source-Dirs:       src
                      , test
  Ghc-Options:          -w -threaded -rtsopts -with-rtsopts=-N
  Main-Is:              Main.hs
  Build-Depends:        base
                      , async
                      , hspec
                      , mtl
                      , time
                      , transformers
  Other-Modules:        Mellon.Controller
                      , Mellon.Controller.Async
                      , Mellon.Device
                      , Mellon.StateMachine
                      , Spec
                      , Mellon.Controller.AsyncSpec

Source-Repository head
  Type:                 git
  Location:             git://github.com/dhess/mellon.git

Source-Repository this
  Type:                 git
  Location:             git://github.com/dhess/mellon.git
  Tag:                  v0.6.0.1
