Name:                   mellon-core
Version:                0.6.0.1
Cabal-Version:          >= 1.10
Build-Type:             Simple
Author:                 Drew Hess <src@drewhess.com>
Maintainer:             Drew Hess <src@drewhess.com>
Homepage:               https://github.com/dhess/mellon/
Bug-Reports:            https://github.com/dhess/mellon/issues/
Stability:              experimental
License:                BSD3
License-File:           LICENSE
Copyright:              Copyright (c) 2016, Drew Hess
Tested-With:            GHC == 7.10.3
Category:               System
Synopsis:               Control physical access devices
Description:
  "Speak, friend, and enter."
  .
  @mellon-core@ is a Haskell package for controlling physical access
  devices, e.g., electric strikes. It provides a simple abstract state
  machine for locking and unlocking such devices.
  .
  <<http://mellon.s3-website-us-west-2.amazonaws.com/mellon-state-diagram.svg>>
  .
  <images/mellon-state-diagram.svg (local copy of mellon state diagram)>
  .

  @mellon-core@ is a low-level package that provides, among other things:
  .
  * The 'Mellon.Device.Class.Device' typeclass, for interfacing with a
    physical device driver or other low-level physical access device
    mechanism.
  .
  * 'Mellon.Monad.Controller.Class.MonadController', which provides a
    monadic interface for controlling a device from a user application
    or service.
  .
  * 'Mellon.Monad.Controller.Trans.ControllerT', a monad transformer
    controller implementation that works with multiple simultaneous
    control threads. This is useful for controlling a lock from a
    network service, for example.
  .
  Note that @mellon-core@ does not provide any useful
  'Mellon.Device.Class.Device' implementations; that is the domain of
  access device implementation-specific packages. Similarly, @mellon-core@
  does not provide authentication mechanisms or network services; that
  is the domain of higher-level packages which use the base @mellon-core@
  package (e.g., @mellon-server@).
Extra-Doc-Files:        README.md
                      , images/*.svg
Extra-Source-Files:     changelog.md

-- Build doctests
Flag test-doctests
  Default: True
  Manual: True

-- Build hlint test
Flag test-hlint
  Default: True
  Manual: True

Library
  Default-Language:     Haskell2010
  HS-Source-Dirs:       src
  GHC-Options:          -Wall -fwarn-incomplete-uni-patterns -fwarn-incomplete-record-updates
  If impl(ghc > 8)
    GHC-Options:        -Wcompat -Wnoncanonical-monad-instances -Wnoncanonical-monadfail-instances -fno-warn-redundant-constraints
  Exposed-Modules:      Mellon.Controller
                      , Mellon.Device
                      , Mellon.StateMachine
  Other-Extensions:     Safe
                      , Trustworthy
  Build-Depends:        base     >= 4.8 && < 5
                      , mtl
                      , time
                      , transformers

Test-Suite hlint
  Type:                 exitcode-stdio-1.0
  Default-Language:     Haskell2010
  Hs-Source-Dirs:       test
  Ghc-Options:          -w -threaded -rtsopts -with-rtsopts=-N
  Main-Is:              hlint.hs
  If !flag(test-hlint)
    Buildable:          False
  Else
    Build-Depends:      base
                      , hlint

Test-Suite doctest
  Type:                 exitcode-stdio-1.0
  Default-Language:     Haskell2010
  Hs-Source-Dirs:       test
  Ghc-Options:          -Wall -threaded
  Main-Is:              doctest.hs
  If !flag(test-doctests)
    Buildable:          False
  Else
    Build-Depends:      base
                      , QuickCheck
                      , quickcheck-instances
                      , doctest

Test-Suite spec
  Type:                 exitcode-stdio-1.0
  Default-Language:     Haskell2010
  Hs-Source-Dirs:       src
                      , test
  Ghc-Options:          -w -threaded -rtsopts -with-rtsopts=-N
  Main-Is:              Spec.hs
  Build-Depends:        base
                      , hspec
                      , mtl
                      , time
                      , transformers
  Other-Modules:        Mellon.Controller
                      , Mellon.Device
                      , Mellon.StateMachine

Source-Repository head
  Type:                 git
  Location:             git://github.com/dhess/mellon.git

Source-Repository this
  Type:                 git
  Location:             git://github.com/dhess/mellon.git
  Tag:                  v0.6.0.1
