Name:                   mellon
Version:                0.6.0.1
Cabal-Version:          >= 1.10
Build-Type:             Simple
Author:                 Drew Hess <src@drewhess.com>
Maintainer:             Drew Hess <src@drewhess.com>
Homepage:               https://github.com/dhess/mellon/
Bug-Reports:            https://github.com/dhess/mellon/issues/
Stability:              experimental
License:                BSD3
License-File:           LICENSE
Copyright:              Copyright (c) 2015, Drew Hess
Tested-With:            GHC == 7.10.1
Synopsis:               Control physical access devices
Description:
  "Speak, friend, and enter."
  .
  @mellon@ is a Haskell package for controlling physical access
  devices, e.g., electric strikes. It provides a simple abstract state
  machine for locking and unlocking such devices.
  .
  <<http://mellon.s3-website-us-west-2.amazonaws.com/mellon-state-diagram.svg>>
  .
  <images/mellon-state-diagram.svg (local copy of mellon state diagram)>
  .

  @mellon@ is a low-level package that provides, among other things:
  .
  * The 'Mellon.Device.Class.Device' typeclass, for interfacing with a
    physical device driver or other low-level physical access device
    mechanism.
  .
  * 'Mellon.Monad.Controller.Class.MonadController', which provides a
    monadic interface for controlling a device from a user application
    or service.
  .
  * 'Mellon.Monad.Controller.Trans.ControllerT', a monad transformer
    controller implementation that works with multiple simultaneous
    control threads. This is useful for controlling a lock from a
    network service, for example.
  .
  Note that @mellon@ does not provide any useful
  'Mellon.Device.Class.Device' implementations; that is the domain of
  access device implementation-specific packages. Similarly, @mellon@
  does not provide authentication mechanisms or network services; that
  is the domain of higher-level packages which use the base @mellon@
  package (e.g., @mellon-server@).

Extra-Doc-Files:   images/*.svg

Library
  Default-Language:     Haskell2010
  HS-Source-Dirs:       src
  GHC-Options:          -Wall
  Exposed-Modules:      Mellon.Monad.Controller
                      , Mellon.Monad.Controller.Trans
                      , Mellon.Monad.Controller.Class
                      , Mellon.Monad.Lock
                      , Mellon.Monad.Lock.Class
                      , Mellon.Monad.Lock.Trans
                      , Mellon.Monad.StateMachine
                      , Mellon.Device.Class
                      , Mellon.Device.MockLock
  Other-Extensions:     ExistentialQuantification
                      , FlexibleContexts
                      , FlexibleInstances
                      , GADTs
                      , GeneralizedNewtypeDeriving
                      , ScopedTypeVariables
                      , TemplateHaskell
  Build-Depends:        base >= 4 && < 5
                      , free
                      , mtl
                      , text
                      , time
                      , transformers

Test-Suite spec
  Type:                 exitcode-stdio-1.0
  Default-Language:     Haskell2010
  Hs-Source-Dirs:       src
                      , test
  Ghc-Options:          -Wall
  Main-Is:              Spec.hs
  Build-Depends:        base
                      , free
                      , hspec
                      , mtl
                      , text
                      , time
                      , transformers
  Other-Modules:        Mellon.Monad.Controller
                      , Mellon.Monad.Controller.Trans
                      , Mellon.Monad.Controller.Class
                      , Mellon.Monad.Lock
                      , Mellon.Monad.Lock.Class
                      , Mellon.Monad.Lock.Trans
                      , Mellon.Monad.StateMachine
                      , Mellon.Device.Class
                      , Mellon.Device.MockLock

Source-Repository head
  Type:                 git
  Location:             git://github.com/dhess/mellon.git
